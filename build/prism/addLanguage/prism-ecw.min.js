Prism.languages.ecw=
{
    comment:
    [
        {
            pattern:/(^|(;\s*))\!.*/,
            lookbehind:!0,
            greedy:!0
        }
    ],
    string:
    {
        pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy:!0
    },
    "class-name":
    {
        pattern:/(\b(?:class|Raw|RMax|RMin|AMax|AMaxDeadBand|AMaxGraceTime|AMin|AMinDeadBand|AMinGraceTime|APreMax|APreMaxDeadBand|APreMaxGraceTime|APreMin|APreMinDeadBand|APreMinGraceTime|ARateOfChangeValue|ARateOfChangePeriod|ARateOfChangeDeadBand|ARateOfChangeGraceTime|Min|Max|SequenceForMin|SequenceForMax|Source)\s+|\bcatch\s+\()[\w.\\]+/i,
        lookbehind:!0,
        inside:
        {
            punctuation:/[.\\]/
        }
    },
    keyword:/\b(?:break|INFINITE|NAN|TestNum|FadecName|EngineNum|StartTimeSec|StartTimeMS|FrameTimeSec|FrameTimeMS|RelativeTime|StabPointNum|ActionNum|PointCounter|ComputeRate_MS|ComputeTimeAvg_MS|Name|String|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
    boolean:/\b(?:false|true|TRUE|FALSE)\b/,
    function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
    operator:/[<>]=?|[=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
    punctuation:/[{}[\];(),.:]/
};